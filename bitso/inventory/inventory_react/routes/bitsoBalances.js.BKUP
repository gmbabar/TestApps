const express = require('express');
const crypto = require('crypto');
const fetch = require('node-fetch');

const router = express.Router();

// Bitso API credentials (store these securely, e.g., in environment variables)
const BITSO_API_KEY = process.env.BITSO_API_KEY;
const BITSO_API_SECRET = process.env.BITSO_API_SECRET;

router.get('/api/bitso-balances', async (req, res) => {
  try {
    const nonce = new Date().getTime();
    const message = nonce.toString();
    const signature = crypto
      .createHmac('sha256', BITSO_API_SECRET)
      .update(message)
      .digest('hex');

    const response = await fetch('https://api.bitso.com/v3/balance/', {
      method: 'GET',
      headers: {
        'Authorization': `Bitso ${BITSO_API_KEY}:${nonce}:${signature}`,
        'Content-Type': 'application/json',
      },
    });

    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }

    const data = await response.json();

    if (data.success) {
      const formattedBalances = data.payload.balances
        .filter(balance => parseFloat(balance.total) > 0)
        .map(balance => ({
          currency: balance.currency,
          balance: balance.total,
          lastUpdated: new Date().toISOString()
        }));

      res.json(formattedBalances);
    } else {
      throw new Error('Failed to fetch balances from Bitso');
    }
  } catch (error) {
    console.error('Error fetching Bitso balances:', error);
    res.status(500).json({ error: 'Internal server error' });
  }
});

module.exports = router;

